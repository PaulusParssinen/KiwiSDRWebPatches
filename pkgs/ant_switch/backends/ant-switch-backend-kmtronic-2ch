#!/usr/bin/env bash
# The MIT License (MIT)
#   
# ant-switch-backend-kmtronic-2ch - kmtronic backend for antenna switch
#
# This is part of KiwiSDR antenna switch extension
#
# Copyright (c) 2017 Kari Karvonen
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

N_CH=2
VERSION=2.0
ADDR_FILE="/etc/default/kmtronic-2ch"

# These switches have no status query command. So simply remember last state sent.
KMTRONIC_STATUS="/tmp/kmtronic-2ch-ant"

if [ -e $ADDR_FILE ]; then
	. $ADDR_FILE
else
    KMTRONIC_URL="http://192.168.1.199:80"
fi

# no switch auth currently
CURLCMD="/usr/bin/curl --silent --connect-timeout 1 --max-time 2 "
#CURLCMD="echo "

AntSW_ShowBackend() {
    echo "kmtronic-2ch v$VERSION 2ch mix $KMTRONIC_URL"
    echo "More info: https://github.com/OH1KK/KiwiSDR-antenna-switch-extension/blob/master/docs/ant-switch-backend-kmtronic.txt"
}

AntSW_GetAddress() {
    echo $KMTRONIC_URL
}

AntSW_SetAddress() {
    if [[ -z "${1// }" ]]; then
        echo -n "Enter URL (currently $KMTRONIC_URL): "
        read url
    else
        url=$1
    fi
    if [ "x$url" != "x" ]; then
        echo "KMTRONIC_URL=\"$url\"" >$ADDR_FILE
    fi
}

AntSW_Initialize() {
    # This function initalises extension. You can leave empty
    :
}

AntSW_GroundAll() {
    # This function turns off (deselects) all antennas
    # no return value
    $CURLCMD $KMTRONIC_URL/FF0100 > /dev/null 2>&1
    echo -n 0 > ${KMTRONIC_STATUS}1
    $CURLCMD $KMTRONIC_URL/FF0200 > /dev/null 2>&1
    echo -n 0 > ${KMTRONIC_STATUS}2
}

function set_antenna() {
    # This function selects antenna (turn on)
    # Only one antenna
    # Antenna to select is on variable $1
    # no return value
    $CURLCMD $KMTRONIC_URL/FF0${1}01 > /dev/null 2>&1
    echo -n 1 > ${KMTRONIC_STATUS}${1}
}

AntSW_SelectAntenna() {
    AntSW_GroundAll         # deselect all before setting a single antenna
    set_antenna $1
}

AntSW_AddAntenna() {
    set_antenna $1
}

AntSW_RemoveAntenna() {
    # This function deselects antenna (turn off)
    # Antenna to deleselct is on variable $1
    # Only one antenna
    # no return value
    $CURLCMD $KMTRONIC_URL/FF0${1}00 > /dev/null 2>&1
    echo -n 0 > ${KMTRONIC_STATUS}${1}
}

AntSW_ToggleAntenna() {
    # This function toggles antenna
    # if on, then off
    # if off, then on
    # Antenna to toggle is on variable $1
    # Only one antenna
    # no return value
    toggle=`cat ${KMTRONIC_STATUS}${1}`
    if [ "x$toggle" == "x1" ]; then
        toggle="0"
    else
        toggle="1"
    fi
    echo -n $toggle > ${KMTRONIC_STATUS}${1}
}

AntSW_ShowSelected() {
    AntSW_ReportSelected
}

AntSW_ReportSelected() {
    # This function show relected antennas
    # returns a string
    # Selected antennas: 1
    # or comma separated list
    # Selected antennas: 1,2

    digits=`cat ${KMTRONIC_STATUS}1``cat ${KMTRONIC_STATUS}2`
    for s in 0 1; do
        thisbit=${digits:${s}:1}
        if [ "x$thisbit" == "x1" ]; then
            selectedantennas="${selectedantennas}$(($s+1)),"
            antennafound=$(($antennafound+1))
        fi
    done
    thisbits=${digits:0:2}
    if [ "x$thisbits" == "x00" ]; then
        # All antenna inputs are grounded
        antennafound=1
        selectedantennas="g,"
    fi
    # remove trailing ','
    selectedantennas=${selectedantennas%?}
    echo -n "Selected antennas: "
    echo $selectedantennas
}
